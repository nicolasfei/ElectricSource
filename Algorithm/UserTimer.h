/*********************************************************************
* 版权所有 (C)2023, 成都XXXX有限公司。
* 
* 文件名称： // UserTimer.h
* 文件标识： // 
* 内容摘要： // 定时器组件
* 其它说明： // 
* 当前版本： // V1.0
* 作     者：// 0001
* 完成日期： // 20230104
* 
* 修改记录
* 修改日期：
* 修 改 人：
* 修改内容： 
**********************************************************************/

/*
最大计时时间: MAX_TICKS * iTimerPeriod / 1000000
*/

#ifndef __USERTIMER_H
#define __USERTIMER_H


#define MAX_TICKS  0x7fffffffffffffff
#define KILL_OFF   0
#define KILL_ON    1

/**********************************************************************
* 函数名称： // TickCountTask(void)
* 功能描述： // Tick计数
* 访问的表： //
* 修改的表： //
* 输入参数： // 
* 输入参数： // 
* 输入参数： // 
* 输出参数： // 
* 返 回 值： // 
* 其它说明： // 其它说明
* 修改日期       修改人	     修改内容
* -----------------------------------------------
* 2022/11/14	   0001 	      XXXX
***********************************************************************/
void TickCountTask(void);

/**********************************************************************
* 函数名称： // void TimerInit(long long *pTargetTicks,int iTimerTicks,int iTimerPeriod)
* 功能描述： // Timer初始化
* 访问的表： //
* 修改的表： //
* 输入参数： // pTargetTicks:Timer计时目标值
* 输入参数： // iTimerTicks:计时时间 us
* 输入参数： // iTimerPeriod:计数周期 us
* 输出参数： // 
* 返 回 值： // 
* 其它说明： // 
* 修改日期       修改人	     修改内容
* -----------------------------------------------
* 2022/11/14	   0001 	      XXXX
***********************************************************************/
void TimerInit(long long *pTargetTicks,int iTimerTicks,int iTimerPeriod);

/**********************************************************************
* 函数名称： // void TimerKill(long long *pTargetTicks)
* 功能描述： // Timer清除计数
* 访问的表： //
* 修改的表： //
* 输入参数： // pTargetTicks:Timer计时标值
* 输入参数： // 
* 输入参数： // 
* 输出参数： // 
* 返 回 值： // 
* 其它说明： // 
* 修改日期       修改人	     修改内容
* -----------------------------------------------
* 2022/11/14	   0001 	      XXXX
***********************************************************************/
void TimerKill(long long *pTargetTicks);

/**********************************************************************
* 函数名称： // char TimerStsRead(long long *pTargetTicks,unsigned char cKillFlag);
* 功能描述： // 读取Timer计时结果
* 访问的表： //
* 修改的表： //
* 输入参数： // pTargetTicks:Timer计时目标值
* 输入参数： // cKillFlag:Timer计时结束失效标志
* 输入参数： // 
* 输出参数： // 
* 返 回 值： // 0：Timer计时未到   1：Timer计时已到
* 其它说明： // 
* 修改日期       修改人	     修改内容
* -----------------------------------------------
* 2022/11/14	   0001 	      XXXX
***********************************************************************/
char TimerStsRead(long long *pTargetTicks,unsigned char cKillFlag);

/**********************************************************************
* 函数名称： // void CounterInit(long long *pTargetTicks)
* 功能描述： // Counter初始化
* 访问的表： //
* 修改的表： //
* 输入参数： // pTargetTicks:Counter计时目标值
* 输入参数： // 
* 输入参数： // 
* 输出参数： // 
* 返 回 值： // 
* 其它说明： // 
* 修改日期       修改人	     修改内容
* -----------------------------------------------
* 2022/11/14	   0001 	      XXXX
***********************************************************************/
void CounterInit(long long *pTargetTicks);

/**********************************************************************
* 函数名称： // int GetCounterResult(long long *pTargetTicks,int iCounterPeriod)
* 功能描述： // 读取Counter计时结果
* 访问的表： //
* 修改的表： //
* 输入参数： // pTargetTicks:Counter计时寄存器
* 输入参数： // iCounterPeriod:计数周期
* 输入参数： // 
* 输出参数： // 
* 返 回 值： // 
* 其它说明： // 
* 修改日期       修改人	     修改内容
* -----------------------------------------------
* 2022/11/14	   0001 	      XXXX
***********************************************************************/
int GetCounterResult(long long *pTargetTicks,int iCounterPeriod);

#endif
